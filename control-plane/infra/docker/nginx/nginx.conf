# ==========================================
# Jarvis AI - Production Nginx Configuration
# TLS 1.3 Termination & Security Hardening
# ==========================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ==========================================
    # Logging Configuration
    # ==========================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format security '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # ==========================================
    # Performance Optimizations
    # ==========================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Hide nginx version
    server_tokens off;

    # ==========================================
    # Gzip Compression
    # ==========================================
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml font/truetype font/opentype
               application/vnd.ms-fontobject image/svg+xml;

    # ==========================================
    # Rate Limiting
    # ==========================================
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/m;
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # ==========================================
    # SSL/TLS Configuration
    # ==========================================
    # Use TLS 1.3 and TLS 1.2 only
    ssl_protocols TLSv1.2 TLSv1.3;

    # Modern cipher suite (prioritize TLS 1.3)
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;

    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # DH parameters for forward secrecy
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # ==========================================
    # Security Headers (Global)
    # ==========================================
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # ==========================================
    # HTTP to HTTPS Redirect (Port 80)
    # ==========================================
    server {
        listen 80;
        listen [::]:80;
        server_name jarvis.ai www.jarvis.ai api.jarvis.ai;

        # Allow Let's Encrypt ACME challenge
        location ^~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # ==========================================
    # HTTPS Server - Main Domain (jarvis.ai)
    # ==========================================
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name jarvis.ai www.jarvis.ai;

        # SSL Certificate paths
        ssl_certificate /etc/letsencrypt/live/jarvis.ai/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/jarvis.ai/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/jarvis.ai/chain.pem;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.stripe.com wss://$host; frame-src https://js.stripe.com https://hooks.stripe.com;" always;

        # Access log for main domain
        access_log /var/log/nginx/jarvis.ai.access.log security;
        error_log /var/log/nginx/jarvis.ai.error.log warn;

        # Root location
        location / {
            proxy_pass http://jarvis:4000;
            proxy_http_version 1.1;

            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port 443;

            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # Health check endpoint (no auth required)
        location /health {
            proxy_pass http://jarvis:4000/health;
            proxy_set_header Host $host;
            access_log off;
        }

        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ^/(\.env|\.git|package\.json|tsconfig\.json) {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # ==========================================
    # HTTPS Server - API Subdomain (api.jarvis.ai)
    # ==========================================
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.jarvis.ai;

        # SSL Certificate paths
        ssl_certificate /etc/letsencrypt/live/api.jarvis.ai/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.jarvis.ai/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/api.jarvis.ai/chain.pem;

        # Security headers (stricter CSP for API)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none'" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;

        # Access log for API domain
        access_log /var/log/nginx/api.jarvis.ai.access.log security;
        error_log /var/log/nginx/api.jarvis.ai.error.log warn;

        # API routes with rate limiting
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            limit_conn conn_limit 10;

            proxy_pass http://jarvis:4000;
            proxy_http_version 1.1;

            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port 443;

            # API-specific timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Auth endpoints with stricter rate limiting
        location ~ ^/api/(auth|login|register|reset-password) {
            limit_req zone=auth_limit burst=3 nodelay;
            limit_conn conn_limit 5;

            proxy_pass http://jarvis:4000;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # Health check
        location /health {
            proxy_pass http://jarvis:4000/health;
            proxy_set_header Host $host;
            access_log off;
        }

        # Block everything else
        location / {
            return 404;
        }
    }

    # ==========================================
    # Default Server (catch-all for unknown domains)
    # ==========================================
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name _;

        # Use a self-signed certificate for unknown domains
        ssl_certificate /etc/nginx/ssl/default-cert.pem;
        ssl_certificate_key /etc/nginx/ssl/default-key.pem;

        # Return 444 (close connection without response)
        return 444;
    }
}
