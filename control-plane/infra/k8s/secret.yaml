apiVersion: v1
kind: Secret
metadata:
  name: jarvis-secrets
  namespace: jarvis
  labels:
    app: jarvis-control-plane
type: Opaque
stringData:
  # AI Provider API Keys (replace with actual values)
  OPENAI_API_KEY: "sk-..."
  ANTHROPIC_API_KEY: "sk-ant-..."
  GOOGLE_AI_API_KEY: "..."
  MISTRAL_API_KEY: "..."
  
  # Security Secrets (generate with: openssl rand -hex 32)
  JWT_SECRET: "your-jwt-secret-here"
  CSRF_SECRET: "your-csrf-secret-here"
  REFRESH_TOKEN_SECRET: "your-refresh-token-secret-here"
  
  # Database Credentials
  POSTGRES_PASSWORD: "jarvis_pass"
  REDIS_PASSWORD: "jarvis_redis_pass"
  
  # Storage Credentials (if using MinIO/S3)
  S3_ACCESS_KEY: "minioadmin"
  S3_SECRET_KEY: "minioadmin"
---
# Alternative: Use External Secrets Operator (recommended for production)
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: jarvis-secrets
#   namespace: jarvis
# spec:
#   refreshInterval: 1h
#   secretStoreRef:
#     name: aws-secretsmanager  # or google-secretsmanager
#     kind: SecretStore
#   target:
#     name: jarvis-secrets
#   data:
#     - secretKey: OPENAI_API_KEY
#       remoteRef:
#         key: jarvis/openai-api-key
#     - secretKey: ANTHROPIC_API_KEY
#       remoteRef:
#         key: jarvis/anthropic-api-key
