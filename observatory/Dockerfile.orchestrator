# JARVIS Orchestrator - Production Dockerfile
# Runs autonomous agents on scheduled intervals

# Stage 1: Build
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install dependencies
RUN npm ci --only=production && \
    npm install -D typescript

# Copy source code
COPY src ./src

# Build TypeScript
RUN npm run build

# Stage 2: Production
FROM node:18-alpine

# Set NODE_ENV
ENV NODE_ENV=production

# Create app user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S jarvis -u 1001

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production && \
    npm cache clean --force

# Copy built files from builder
COPY --from=builder /app/dist ./dist

# Copy migrations
COPY migrations ./migrations

# Change ownership to app user
RUN chown -R jarvis:nodejs /app

# Switch to app user
USER jarvis

# No healthcheck needed for orchestrator (it doesn't expose ports)

# Start orchestrator
CMD ["node", "dist/orchestrator/run-orchestrator.js"]
