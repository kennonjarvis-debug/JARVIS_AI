# ==========================================
# Jarvis Control Plane - Environment Config
# ==========================================

# Node Environment
NODE_ENV=production
PORT=4000
LOG_LEVEL=info

# ==========================================
# AI DAWG Integration
# ==========================================

# AI DAWG Backend URL
AI_DAWG_BACKEND_URL=http://ai-dawg-backend:3000

# AI Service URLs
VOCAL_COACH_URL=http://ai-dawg-vocal-coach:8000
PRODUCER_URL=http://ai-dawg-producer:8001
AI_BRAIN_URL=http://ai-dawg-ai-brain:8002

# ==========================================
# Database Configuration
# ==========================================

# Option 1: Shared with AI DAWG
# DATABASE_URL=postgresql://ai_dawg_user:ai_dawg_pass@postgres:5432/ai_dawg_db
# REDIS_URL=redis://:ai_dawg_redis_pass@redis:6379

# Option 2: Standalone Jarvis database
DATABASE_URL=postgresql://jarvis_user:jarvis_pass@postgres:5432/jarvis_db
REDIS_URL=redis://:jarvis_redis_pass@redis:6379

POSTGRES_DB=jarvis_db
POSTGRES_USER=jarvis_user
POSTGRES_PASSWORD=jarvis_pass
REDIS_PASSWORD=jarvis_redis_pass

# ==========================================
# AI Provider API Keys
# ==========================================

# OpenAI (GPT-4o, GPT-4o Mini)
OPENAI_API_KEY=sk-...

# Anthropic (Claude Sonnet 4.5)
ANTHROPIC_API_KEY=sk-ant-...

# Google AI (Gemini Flash 2.5)
GOOGLE_AI_API_KEY=...

# Mistral (optional)
MISTRAL_API_KEY=...

# ==========================================
# Autonomous Management
# ==========================================

# Enable autonomous service management
AUTONOMOUS_ENABLED=true

# Enable Claude MCP Server integration
ENABLE_MCP=false

# ==========================================
# Security
# ==========================================

# JWT Secret (generate with: openssl rand -hex 32)
JWT_SECRET=your-jwt-secret-here

# CSRF Secret
CSRF_SECRET=your-csrf-secret-here

# Refresh Token Secret
REFRESH_TOKEN_SECRET=your-refresh-token-secret-here

# ==========================================
# Storage (if using MinIO)
# ==========================================

S3_ENDPOINT=http://minio:9000
S3_ACCESS_KEY=minioadmin
S3_SECRET_KEY=minioadmin
S3_BUCKET=ai-dawg-storage
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin

# ==========================================
# Feature Flags
# ==========================================

# Enable specific modules
ENABLE_MARKETING_MODULE=true
ENABLE_ENGAGEMENT_MODULE=true
ENABLE_AUTOMATION_MODULE=true
ENABLE_TESTING_MODULE=true
ENABLE_MUSIC_MODULE=true

# ==========================================
# Monitoring & Observability
# ==========================================

# Health check intervals (seconds)
HEALTH_CHECK_INTERVAL=30
MAX_RESTART_ATTEMPTS=3
RESTART_COOLDOWN=60

# ==========================================
# Alert Notifications
# ==========================================

# iPhone Push Notifications via Pushover
# Get credentials at: https://pushover.net/
# After creating account, create an app to get API token
PUSHOVER_USER_KEY=your-pushover-user-key
PUSHOVER_API_TOKEN=your-pushover-app-token

# iPhone/Android Push via Ntfy (Open Source Alternative)
# Setup: Install ntfy app and subscribe to your topic
# Docs: https://ntfy.sh/
NTFY_TOPIC=jarvis-alerts-your-unique-topic
NTFY_SERVER=https://ntfy.sh

# macOS Native Notifications
# Set to false to disable macOS system notifications
MACOS_NOTIFICATIONS_ENABLED=true

# Slack Notifications
# Create webhook at: https://api.slack.com/messaging/webhooks
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# ChatGPT Custom Actions Webhook
# This allows ChatGPT to receive system alerts
CHATGPT_WEBHOOK_URL=https://your-chatgpt-actions-endpoint.com/alerts

# Dashboard URL (for notification links)
DASHBOARD_URL=http://localhost:5001

# ==========================================
# Music Creation Settings
# ==========================================

# Vocal isolation temporary directory
VOCAL_ISOLATION_TEMP_DIR=/tmp/jarvis-vocal-isolation

# Music upload directory
MUSIC_UPLOAD_DIR=/tmp/jarvis-music-uploads

# Music generation output directory
MUSIC_OUTPUT_DIR=/tmp/jarvis-generated-music

# Audio mixing temporary directory
AUDIO_MIXING_TEMP_DIR=/tmp/jarvis-audio-mixing

# Vocal isolation model preference (demucs, spleeter, auto)
VOCAL_ISOLATION_MODEL=auto

# Music generation provider (suno, musicgen, stable-audio, local)
MUSIC_GENERATOR_PROVIDER=local

# Suno AI API Key (for full song generation with vocals)
SUNO_API_KEY=your-suno-api-key

# MusicGen / Replicate API Key (for instrumental generation)
MUSIC_GEN_API_KEY=your-replicate-api-key

# Stable Audio API Key
STABLE_AUDIO_API_KEY=your-stability-api-key

# ElevenLabs API Key (for voice cloning and TTS)
# Sign up at: https://elevenlabs.io/
ELEVENLABS_API_KEY=your-elevenlabs-api-key

# ==========================================
# Deployment Mode
# ==========================================

# Options: standalone, integrated
DEPLOYMENT_MODE=integrated
