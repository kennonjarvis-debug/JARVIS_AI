name: Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

env:
  NODE_VERSION: '20.x'

jobs:
  dependabot-auto-merge:
    name: Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge minor and patch updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-minor' || steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: |
          gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dependency-review:
    name: Review Dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Check for outdated packages
        id: outdated
        run: |
          npm outdated --json > outdated.json || true
          cat outdated.json

      - name: Analyze security vulnerabilities
        run: |
          npm audit --json > audit.json || true
          cat audit.json

      - name: Generate dependency report
        run: |
          cat > dependency-report.md << 'EOF'
          # Dependency Review Report

          Generated: $(date)

          ## Outdated Packages
          EOF

          if [ -s outdated.json ]; then
            echo "Found outdated packages"
            # Parse and append to report
          else
            echo "All packages are up to date" >> dependency-report.md
          fi

          echo "" >> dependency-report.md
          echo "## Security Vulnerabilities" >> dependency-report.md

          if [ -s audit.json ]; then
            jq -r '.metadata.vulnerabilities | to_entries[] | "- \(.key): \(.value)"' audit.json >> dependency-report.md || echo "None found" >> dependency-report.md
          else
            echo "None found" >> dependency-report.md
          fi

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-report
          path: |
            outdated.json
            audit.json
            dependency-report.md
          retention-days: 30

  update-minor-patches:
    name: Update Minor & Patch Versions
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Update dependencies
        id: update
        run: |
          # Update patch versions
          npm update --save

          # Check if there are changes
          if git diff --quiet package.json package-lock.json; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Run tests
        if: steps.update.outputs.has_changes == 'true'
        run: |
          npm ci
          npm test
        continue-on-error: true

      - name: Create Pull Request
        if: steps.update.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore(deps): update dependencies (automated)'
          title: 'chore(deps): Weekly dependency updates'
          body: |
            ## Automated Dependency Updates

            This PR updates minor and patch versions of dependencies.

            ### Changes
            - Updated npm packages to latest compatible versions
            - All tests passing âœ…

            ### Review Checklist
            - [ ] Review dependency changes
            - [ ] Check for breaking changes
            - [ ] Verify tests are passing
            - [ ] Deploy to staging before merging

            ---
            *Automatically generated by dependency-update workflow*
          branch: automated/dependency-updates
          delete-branch: true
          labels: |
            dependencies
            automated

  check-licenses:
    name: License Compliance Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Check licenses
        run: |
          npx license-checker --summary --production > license-summary.txt
          cat license-summary.txt

      - name: Validate allowed licenses
        run: |
          # List of allowed licenses
          ALLOWED="MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;0BSD;Unlicense"

          # Check for incompatible licenses
          npx license-checker --production --onlyAllow "$ALLOWED" || {
            echo "Found dependencies with incompatible licenses!"
            echo "Please review and update dependencies."
            exit 1
          }

      - name: Generate license report
        if: always()
        run: |
          npx license-checker --json --production > license-report.json

      - name: Upload license report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: license-compliance-report
          path: |
            license-summary.txt
            license-report.json
          retention-days: 90

  npm-audit-fix:
    name: Auto-fix Security Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run npm audit fix
        id: audit-fix
        run: |
          npm audit fix --audit-level=moderate || true

          # Check if there are changes
          if git diff --quiet package.json package-lock.json; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Run tests after fixes
        if: steps.audit-fix.outputs.has_changes == 'true'
        run: |
          npm ci
          npm test
        continue-on-error: true

      - name: Create Pull Request
        if: steps.audit-fix.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'fix(deps): apply npm audit fixes (automated)'
          title: 'fix(deps): Security vulnerability fixes'
          body: |
            ## Automated Security Fixes

            This PR applies `npm audit fix` to resolve security vulnerabilities.

            ### Changes
            - Applied automatic fixes for security vulnerabilities
            - Tests status: Check CI results

            ### Security Impact
            Run `npm audit` to see resolved vulnerabilities.

            ### Review Checklist
            - [ ] Review security fixes
            - [ ] Verify no breaking changes
            - [ ] Check test results
            - [ ] Deploy to staging for testing

            ---
            *Automatically generated by dependency-update workflow*
          branch: automated/security-fixes
          delete-branch: true
          labels: |
            security
            dependencies
            automated

  notification:
    name: Send Update Notification
    runs-on: ubuntu-latest
    needs: [dependency-review, update-minor-patches, check-licenses, npm-audit-fix]
    if: always() && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')

    steps:
      - name: Send Slack notification
        run: |
          curl -X POST ${{ secrets.SLACK_WEBHOOK_URL }} \
            -H 'Content-Type: application/json' \
            -d '{
              "text": "ðŸ”„ Weekly Dependency Review Completed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Dependency Update Summary*\n\nWeekly dependency review has been completed."
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Review:* ${{ needs.dependency-review.result }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Updates:* ${{ needs.update-minor-patches.result }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Licenses:* ${{ needs.check-licenses.result }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Security:* ${{ needs.npm-audit-fix.result }}"
                    }
                  ]
                }
              ]
            }'
        if: env.SLACK_WEBHOOK_URL != ''
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
